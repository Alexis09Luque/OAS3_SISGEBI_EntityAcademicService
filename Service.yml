openapi: '3.0.2'
info:
  title: Entities Academic Service 
  description: This service allows for control of the system's entities academic
  version: "1.0"
  contact:
    name: Juan Alexis Luque Ayala
    email: juan.luque.ayala@gmail.com
servers:
  - url: https://entities-academic-service.herokuapp.com/

tags:
  - name: School
    description: Everything about school
  - name: Faculty
    description: Everything about faculty
        
paths:
  #Modulo de Escuela
  /schools:
    get:
      tags:
        - School    
      summary: Find all schools
      operationId: listSchools
      responses:            
        '200':
          $ref: components/responses/responses.yml#/ShowSchools          
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
          
          
    post:
      tags:
        - School    
      summary: Add a new school to the system
      operationId: addSchool
      requestBody:
        description: school to add to the system
        content:
          application/json:
            schema:
              $ref: components/schemas/payloads/payload.yml#/SchoolPayload
      responses:      
        '201':
          $ref: components/responses/responses.yml#/CreatedSchool         
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
        '422':
          $ref: components/responses/responses.yml#/UnprocessableEntity 

  /schools/{id}:
    get:
      tags:
        - School
      summary: Find a school
      operationId: findSchool
      parameters:
        - $ref: components/parameters/parameters.yml#/id
      responses:
        '200':
          $ref: components/responses/responses.yml#/ShowSchool      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
    put: 
      tags:
        - School
      summary: Update an existing School
      operationId: updateSchool
      parameters: 
        - $ref: components/parameters/parameters.yml#/id
      requestBody:
        description: school to update to the system
        content:
          x-www-form-urlencoded:
            schema:
              $ref: components/schemas/payloads/payload.yml#/SchoolPayload
      responses:
        '201':
          $ref: components/responses/responses.yml#/CreatedSchool     
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
        '422':
          $ref: components/responses/responses.yml#/UnprocessableEntity           

    delete:
      tags:
        - School
      summary: Delete an existing School
      operationId: deleteSchool
      parameters:
        - $ref: components/parameters/parameters.yml#/id
      responses:
        '200':
          $ref: components/responses/responses.yml#/DeleteSchool      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 

#Modulo de Faculty
  /faculties:
    get:
      tags:
        - Faculty    
      summary: Find all faculties
      operationId: listFaculties
      responses:            
        '200':
          $ref: components/responses/responses.yml#/ShowFaculties          
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
          
          
    post:
      tags:
        - Faculty    
      summary: Add a new faculty to the system
      operationId: addFaculty
      requestBody:
        description: faculty to add to the system
        content:
          application/json:
            schema:
              $ref: components/schemas/payloads/payload.yml#/FacultyPayload
      responses:      
        '201':
          $ref: components/responses/responses.yml#/CreatedFaculty          
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
        '422':
          $ref: components/responses/responses.yml#/UnprocessableEntity 

  /faculties/{id}:
    get:
      tags:
        - Faculty
      summary: Find a faculty
      operationId: findFaculty
      parameters:
        - $ref: components/parameters/parameters.yml#/id
      responses:
        '200':
          $ref: components/responses/responses.yml#/ShowFaculty      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
    put: 
      tags:
        - Faculty
      summary: Update an existing Faculty
      operationId: updateFaculty
      parameters: 
        - $ref: components/parameters/parameters.yml#/id
      requestBody:
        description: faculty to update to the system
        content:
          x-www-form-urlencoded:
            schema:
              $ref: components/schemas/payloads/payload.yml#/FacultyPayload
      responses:
        '201':
          $ref: components/responses/responses.yml#/CreatedFaculty    
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
        '422':
          $ref: components/responses/responses.yml#/UnprocessableEntity           

    delete:
      tags:
        - Faculty
      summary: Delete an existing Faculty
      operationId: deleteFaculty
      parameters:
        - $ref: components/parameters/parameters.yml#/id
      responses:
        '200':
          $ref: components/responses/responses.yml#/DeleteFaculty      
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 
        '422':
          $ref: components/responses/responses.yml#/UnprocessableEntity 


  /faculties/{id}/schools:
    get:
      tags:
        - Faculty    
      summary: Find all schools of a faculty
      operationId: listSchoolOfFaculty
      responses:            
        '200':
          $ref: components/responses/responses.yml#/ShowSchoolsOfFaculty          
        '404':          
          $ref: components/responses/responses.yml#/NotFound 
        '405':
          $ref: components/responses/responses.yml#/MethodNotAllowed           
        '401':
          $ref: components/responses/responses.yml#/Unauthenticated 

# Aplicar la API key globalmente a todas las operaciones 
security:
  - Authorization: [j89vh3QbsT0k1gfuBzttPCDHH2kOKH7r]
            

components:
      
  # SECURITY
  # Contiene todos los tipos de seguridad para el uso del servicio  
  securitySchemes:
    # AUTHORIZATION:
    # Permite el uso del servicio mediante el registro de una api key enviado en el header
    # con el nombre Authorization, por ejemplo: Authorization EJm9IExSA9rv3N9uCVfIhNRdNOMUSe8w
    # estas cadenas serán colocadas en el archivo de configuración del servicio y restringido mediante un middleware
    Authorization:
      type: apiKey
      name: Authorization
      in: header 